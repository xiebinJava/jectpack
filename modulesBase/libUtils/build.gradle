plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

def rp = rootProject.ext
android {
    namespace 'com.fs.libutils'
    compileSdk rp.android.compileSdk

    defaultConfig {
        minSdk rp.android.minsdk
        targetSdk rp.android.targetSdk
        versionCode rp.android.versionCode
        versionName rp.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = rp.compose_version
    }
}


dependencies {
    api rp.libARouter
    kapt rp.libARouterCompiler
    api rp.mmkv
    api rp.androidCoroutines
    api rp.coroutines
    api rp.library.recyclerview
    api rp.library.lifeExtensions
    api rp.library.lifeViewModel
    api rp.library.lifecycleRuntime
    api rp.library.glide
    api 'androidx.core:core-ktx:1.7.0'
    api rp.library.appcompat
    api rp.library.material
    api rp.library.constraintlayout
    api rp.retrofit
    api rp.retrofitConverterGson
    api rp.okHttp3Log
    api rp.library.activityKtx
    api rp.library.fragmentKtx
    api rp.hilt
    kapt rp.hiltCompiler
    api rp.library.composeUi
    api rp.library.composeMaterial
    api rp.library.activityCompose
    api rp.library.composeTool
    api rp.library.viewModelCompose
}